apiVersion: v1
kind: Template
metadata:
  name: ha-mlops-minio
parameters: 
  - name: MINIO_ACCESS_KEY 
    displayName: minio access key 
    description: access key for minio 
    generate: expression 
    from: "[a-zA-Z0-9]{10}" 
    required: true 
  - name: MINIO_SECRET_KEY 
    displayName: minio secret key 
    description: secret key for minio 
    generate: expression 
    from: "[a-zA-Z0-9]{40}" 
    required: true 
message: |
  "... The minio access key is ${MINIO_ACCESS_KEY} ..." 
  "... The minio secret key is ${MINIO_SECRET_KEY} ..." 
objects:
  # Source: minio/templates/secrets.yaml
- apiVersion: v1
  kind: Secret
  metadata:
    name: ha-mlops-minio
    labels:
      app: ha-mlops
      component: minio
  type: Opaque
  data:
    key.json: ""
  stringData:
    access-key: "${MINIO_ACCESS_KEY}"
    secret-key: "${MINIO_SECRET_KEY}"
  # Source: minio/templates/pvc.yaml
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ha-mlops-minio
    labels:
      app: ha-mlops
      component: minio
  spec:
    accessModes:
      - "ReadWriteOnce"
    resources:
      requests:
        storage: "8Gi"
  # Source: minio/templates/service.yaml
- apiVersion: v1
  kind: Service
  metadata:
    name: ha-mlops-minio
    labels:
      app: ha-mlops
      component: minio
  spec:
    type: ClusterIP
    
    ports:
      - name: minio
        port: 9000
        targetPort: minio
        nodePort: null
    selector:
      app: ha-mlops
      component: minio
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ha-mlops
      component: minio
    name: ha-mlops-minio
  spec:
    path: /
    port:
      targetPort: minio
    to:
      kind: Service
      name: ha-mlops-minio
  # Source: minio/templates/standalone/deployment.yaml
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ha-mlops-minio
    labels:
      app: ha-mlops
      component: minio
  spec:
    strategy:
      type: Recreate
    selector:
      matchLabels:
        app: ha-mlops
        component: minio
    template:
      metadata:
        labels:
          app: ha-mlops
          component: minio
      spec:
        containers:
          - name: minio
            image: bitnami/minio:2021.6.17-debian-10-r0
            imagePullPolicy: "IfNotPresent"
            env:
              - name: BITNAMI_DEBUG
                value: "false"
              - name: MINIO_SCHEME
                value: "http"
              - name: MINIO_FORCE_NEW_KEYS
                value: "no"
              - name: MINIO_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: ha-mlops-minio
                    key: access-key
              - name: MINIO_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: ha-mlops-minio
                    key: secret-key
              - name: MINIO_BROWSER
                value: "on"
              - name: MINIO_PROMETHEUS_AUTH_TYPE
                value: "public"
            envFrom:
            ports:
              - name: minio
                containerPort: 9000
                protocol: TCP
            livenessProbe:
              httpGet:
                path: /minio/health/live
                port: minio
                scheme: "HTTP"
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 5
            readinessProbe:
              tcpSocket:
                port: minio
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 1
              successThreshold: 1
              failureThreshold: 5
            resources:
              limits: {}
              requests: {}
            volumeMounts:
              - name: data
                mountPath: /data
        volumes:
          - name: data
            persistentVolumeClaim:
              claimName: ha-mlops-minio
